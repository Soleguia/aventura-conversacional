{"version":3,"sources":["css/story-component.module.css","components/StoryComponent.js","views/StoryView.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","StoryComponent","memo","props","answers","passAnswer","answer","sendData","Fragment","className","styles","storyComponent","fragment","image","src","coletteText","parse","colette","map","onClick","value","StoryView","useState","fragments","setFragments","currentFragment","setCurrentFragment","showFragment","setShowFragment","useEffect","fetch","then","req","json","res","getShowFragment","newShow","current","find","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yJACAA,EAAOC,QAAU,CAAC,eAAiB,wCAAwC,MAAQ,+BAA+B,MAAQ,+BAA+B,YAAc,qCAAqC,QAAU,iCAAiC,OAAS,kC,+HCInPC,EAAiBC,gBAAK,SAACC,GAAW,IAAD,EAEnBC,EAMjBC,EAAa,SAACC,GAChBH,EAAMI,SAASD,IAGnB,OACI,cAAC,IAAME,SAAP,UACI,sBAAKC,UAAWC,IAAOC,eAAvB,WAEY,UAAAR,EAAMS,gBAAN,eAAgBC,OAEZ,wBAAQJ,UAAWC,IAAOG,MAA1B,SACI,qBAAKC,IAAK,UAAUX,EAAMS,SAASC,UAGvC,GAEZ,qBAAKJ,UAAWC,IAAOK,YAAvB,SAAsCZ,EAAMS,SAAWI,YAAMb,EAAMS,SAASK,SAAW,mBACvF,qBAAKR,UAAWC,IAAON,QAAvB,SACMD,EAAMS,UAxBDR,EAwB0BD,EAAMS,SAASR,QAvB5D,OAAOA,QAAP,IAAOA,OAAP,EAAOA,EAASc,KAAK,SAAAZ,GACjB,OAAQ,wBAA8BG,UAAWC,IAAOJ,OAAQa,QAAS,kBAAMd,EAAWC,EAAOM,WAAzF,SAAqGN,EAAOc,OAA/Fd,EAAOM,cAsBuC,aC5BlES,EAAY,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACpBC,EADoB,KACTC,EADS,OAEmBF,mBAAS,GAF5B,mBAEpBG,EAFoB,KAEHC,EAFG,OAGaJ,oBAAS,GAHtB,mBAGpBK,EAHoB,KAGNC,EAHM,KAK3BC,qBAAW,WACPC,MAAM,yBACDC,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAM,SAAAG,GACHC,EAAgBD,EAAKT,GACrBD,EAAaU,QAEtB,IAEHL,qBAAW,WACP,IAAIO,EAAUD,EAAgBZ,EAAWE,GACzCG,EAAgBQ,KACjB,CAACb,EAAWE,IAEf,IAAMU,EAAkB,SAACZ,EAAWc,GAChC,OAAOd,EAAUe,MAAM,SAAA1B,GAAQ,OAAIA,EAAS2B,KAAOF,MAGvD,OACI,qBAAK5B,UAAU,QAAf,SAEQkB,EAAe,cAAC1B,EAAD,CAAgBW,SAAUe,EAAcpB,SAAUmB,IAAwC,MChB1Gc,MATf,WAEE,OACE,qBAAK/B,UAAU,MAAf,SACE,cAAC,EAAD,OCISgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a68870df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"storyComponent\":\"story-component_storyComponent__1beS3\",\"image\":\"story-component_image__2BaTJ\",\"title\":\"story-component_title__3D80Q\",\"coletteText\":\"story-component_coletteText__3UXu3\",\"answers\":\"story-component_answers__3-teA\",\"answer\":\"story-component_answer__3ythk\"};","import React, { memo } from 'react'\r\nimport parse from 'html-react-parser'\r\n\r\nimport styles from '../css/story-component.module.css'\r\n\r\nexport const StoryComponent = memo((props) => {\r\n    \r\n    const handleAnswers = (answers) => {\r\n        return answers?.map( answer => {\r\n            return (<button key={answer.fragment} className={styles.answer} onClick={() => passAnswer(answer.fragment)}>{answer.value}</button>)\r\n        })\r\n    }\r\n\r\n    const passAnswer = (answer) => {\r\n        props.sendData(answer)\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <div className={styles.storyComponent}>\r\n                    {\r\n                        props.fragment?.image \r\n                        ?\r\n                            <figure className={styles.image}>\r\n                                <img src={'images/'+props.fragment.image} />\r\n                            </figure>\r\n                        :\r\n                            ''\r\n                    }   \r\n                <div className={styles.coletteText}>{ props.fragment ? parse(props.fragment.colette) : 'Wait for it...' }</div>\r\n                <div className={styles.answers}>\r\n                    { props.fragment ? handleAnswers(props.fragment.answers) : '' }\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n})\r\n","import React, {useEffect, useState} from 'react'\r\nimport { StoryComponent } from '../components/StoryComponent'\r\n\r\nexport const StoryView = () => {\r\n    const [fragments, setFragments] = useState([])\r\n    const [currentFragment, setCurrentFragment] = useState(0)\r\n    const [showFragment, setShowFragment] = useState(false)\r\n\r\n    useEffect( () => {\r\n        fetch('./data/fragments.json')\r\n            .then( req => req.json() )\r\n            .then( res => {\r\n                getShowFragment(res, currentFragment)\r\n                setFragments(res);\r\n            })\r\n    }, [])\r\n   \r\n    useEffect( () => {\r\n        let newShow = getShowFragment(fragments, currentFragment)\r\n        setShowFragment(newShow);\r\n    }, [fragments, currentFragment])\r\n\r\n    const getShowFragment = (fragments, current) => {\r\n        return fragments.find( fragment => fragment.id === current )\r\n    }\r\n    \r\n    return (\r\n        <div className=\"story\">\r\n            {\r\n                showFragment ? <StoryComponent fragment={showFragment} sendData={setCurrentFragment}></StoryComponent> : ''\r\n            }\r\n        </div>\r\n    )\r\n}","import './App.css';\r\nimport { StoryView } from './views/StoryView';\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <StoryView></StoryView>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}